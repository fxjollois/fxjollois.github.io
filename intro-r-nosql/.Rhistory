mutate(size_f = factor(size),
total_f = cut(total_bill, 10)) %>%
group_by(size_f, total_f) %>%
summarise(tip_m = mean(tip))
temp
ggplot(temp, aes(size_f, total_f, fill = tip_m)) +
geom_bin2d() +
theme_minimal()
# Représenter total_bill en fonction de sex et smoker.
ggplot(tips, aes(sex, total_bill, fill = sex)) +
geom_boxplot() +
facet_wrap(~ smoker) +
theme_minimal()
# Toujours dans tips, représenter total_bill et tip, en fonction de sex de 2 façons
ggplot(tips, aes(total_bill, tip, col = sex)) +
geom_point() +
geom_smooth(method = "lm", se = F) +
theme_minimal()
ggplot(tips, aes(total_bill, tip, col = sex)) +
geom_point() +
geom_smooth(method = "lm", se = F) +
facet_wrap(~ sex) +
theme_minimal()
# Idem avec smoker en plus
ggplot(tips, aes(total_bill, tip, col = sex)) +
geom_point() +
geom_smooth(method = "lm", se = F) +
facet_wrap(~ smoker) +
theme_minimal()
ggplot(tips, aes(total_bill, tip)) +
geom_point() +
geom_smooth(method = "lm", se = F, fullrange = T) +
facet_grid(smoker ~ sex, labeller = label_both) +
theme_minimal()
library(ggmap)
View(crime)
ggplot() +
geom_point(data = crime, aes(lon, lat))
?get_map
m = get_map(location = c(median(crime$lon), median(crime$lat)))
ggmap(get_map("Europe"))
median(crime$lon)
m = get_map(location = c(median(crime$lon, na.rm = T),
median(crime$lat, na.rm = T)))
ggmap(m)
ggmap(m) +
geom_point(data = crime, aes(lon, lat))
m
names(m)
names(attributes(m))
m$zoom
attr(m, "zoom")
m = get_map(location = c(median(crime$lon, na.rm = T),
median(crime$lat, na.rm = T)),
zoom = 8)
ggmap(m) +
geom_point(data = crime, aes(lon, lat))
m = get_map(location = c(median(crime$lon, na.rm = T),
median(crime$lat, na.rm = T)),
zoom = 6)
ggmap(m) +
geom_point(data = crime, aes(lon, lat))
m = get_map(location = c(median(crime$lon, na.rm = T),
median(crime$lat, na.rm = T)),
zoom = 5)
ggmap(m) +
geom_point(data = crime, aes(lon, lat))
box = c(
min(crime$lon, na.rm = T),
min(crime$lat, na.rm = T),
max(crime$lon, na.rm = T),
max(crime$lat, na.rm = T)
)
m = get_map(location = box)
ggmap(m) +
geom_point(data = crime, aes(lon, lat))
m = get_map(location = c(-96, 32), zoom = 5)
ggmap(m) +
geom_point(data = crime, aes(lon, lat))
ggplot() +
geom_point(data = crime, aes(lon, lat))
m = get_map(location = c(-96, 32.5), zoom = 5)
ggmap(m) +
geom_point(data = crime, aes(lon, lat))
m = get_map(location = c(-96, 32.5), zoom = 6)
ggmap(m) +
geom_point(data = crime, aes(lon, lat))
?get_map
m = get_map(location = c(-96, 32.5), zoom = 6,
maptype = "terrain-background")
ggmap(m) +
geom_point(data = crime, aes(lon, lat))
m = get_map(location = c(-96, 32.5), zoom = 6,
maptype = "terrain")
ggmap(m) +
geom_point(data = crime, aes(lon, lat))
m = get_map(location = c(-96, 32.5), zoom = 6,
maptype = "toner-lite")
ggmap(m) +
geom_point(data = crime, aes(lon, lat))
ggmap(m) +
geom_point(data = crime, aes(lon, lat)) +
facet_wrap(~ offense)
ggmap(m) +
geom_point(data = crime, aes(lon, lat, col = offense)) +
facet_wrap(~ offense) +
theme_void()
ggmap(m) +
geom_bin2d(data = crime, aes(lon, lat))
ggmap(m) +
geom_point(data = crime, aes(lon, lat))
ggmap(m) +
geom_bin2d(data = crime, aes(lon, lat))
ggmap(m) +
geom_point(data = crime, aes(lon, lat, col = offense)) +
facet_wrap(~ offense) +
theme_void()
## Avec leaflet
n = leaflet(crime) %>% addTiles() %>%
addCircles(lng = ~lon, lat = ~lat)
n
?leaflet
?fitBounds
## Avec leaflet
n = leaflet(crime) %>% addTiles() %>%
fitBounds(box)
## Avec leaflet
n = leaflet(crime) %>% addTiles() %>%
fitBounds(min(crime$lon, na.rm = T),
min(crime$lat, na.rm = T),
max(crime$lon, na.rm = T),
max(crime$lat, na.rm = T))
n %>% addCircles(lng = ~lon, lat = ~lat)
??grid
?colorFactor
pal <- colorFactor("RdYlBu", domain = levels(crime$offense))
n %>% addCircles(lng = ~lon,
lat = ~lat,
color = ~pal(offense))
## Avec ggmap
m = get_map(location = c(-96, 32.5), zoom = 6,
maptype = "toner-lite")
n %>%
addCircles(lng = ~lon,
lat = ~lat,
color = ~pal(offense)) %>%
addLegend(pal = pal,
values = ~offense, opacity = 0.7,
title = NULL,
position = "bottomright")
ggplot() +
geom_density2d(data = crime, aes(lon, lat))
ggplot(data = crime, aes(lon, lat)) +
stat_density_2d(aes(fill = ..level..), geom = "polygon")
## Avec leaflet
n = leaflet(crime) %>%
addTiles() %>%
fitBounds(min(crime$lon, na.rm = T),
min(crime$lat, na.rm = T),
max(crime$lon, na.rm = T),
max(crime$lat, na.rm = T))
n %>% addCircles(lng = ~lon, lat = ~lat)
pal <- colorFactor("RdYlBu", domain = levels(crime$offense))
n %>%
addCircles(lng = ~lon,
lat = ~lat,
color = ~pal(offense)) %>%
addLegend(pal = pal,
values = ~offense, opacity = 0.7,
title = NULL,
position = "bottomright")
## Avec ggmap
m = get_map(location = c(-96, 32.5), zoom = 6,
maptype = "toner-lite")
ggmap(m) +
geom_point(data = crime, aes(lon, lat))
ggmap(m) +
geom_bin2d(data = crime, aes(lon, lat))
ggplot(aes()) +
stat_density_2d(data = crime,
aes(lon, lat, fill = ..level..),
geom = "polygon")
ggmap(m) +
geom_point(data = crime, aes(lon, lat, col = offense)) +
facet_wrap(~ offense) +
theme_void()
rm(list=ls())
## Avec leaflet
n = leaflet(crime) %>%
addTiles() %>%
fitBounds(min(crime$lon, na.rm = T),
min(crime$lat, na.rm = T),
max(crime$lon, na.rm = T),
max(crime$lat, na.rm = T))
n %>% addCircles(lng = ~lon, lat = ~lat)
n %>% addCircles(lng = ~lon, lat = ~lat)
pal <- colorFactor("RdYlBu", domain = levels(crime$offense))
n %>%
addCircles(lng = ~lon,
lat = ~lat,
color = ~pal(offense)) %>%
addLegend(pal = pal,
values = ~offense, opacity = 0.7,
title = NULL,
position = "bottomright")
## Avec ggmap
m = get_map(location = c(-96, 32.5), zoom = 6,
maptype = "toner-lite")
ggmap(m) +
geom_point(data = crime, aes(lon, lat))
ggmap(m) +
geom_point(data = crime, aes(lon, lat)) +
theme_void()
ggmap(m) +
geom_bin2d(data = crime, aes(lon, lat)) +
theme_void()
ggplot(aes()) +
stat_density_2d(data = crime,
aes(lon, lat, fill = ..level..),
geom = "polygon")
ggmap(m) +
stat_density_2d(data = crime,
aes(lon, lat, fill = ..level..),
geom = "polygon")
ggmap(m) +
stat_density_2d(data = crime,
aes(lon, lat, fill = ..level..),
geom = "polygon") +
theme_void()
mHouston = get_map("Houston, TX, USA",
maptype = "toner-lite")
mHouston = get_map("Houston, Texas, USA",
maptype = "toner-lite")
ggmap(mHouston) +
stat_density_2d(data = crime,
aes(lon, lat, fill = ..level..),
geom = "polygon") +
theme_void()
ggmap(m) +
geom_point(data = crime, aes(lon, lat, col = offense)) +
facet_wrap(~ offense) +
theme_void()
?crime
knitr::opts_chunk$set(echo = FALSE, fig.alin = "center")
library(ggplot2)
library(ggmap)
library(geojsonio)
airbnb.summ = read.table("airbnb-paris-2015-09-02-summary.csv",
sep = ",", header = T,
quote = "\"", comment.char = "")
airbnb.summ = read.table("../donnees/airBnB-2015-09-02/airbnb-paris-2015-09-02-summary.csv",
sep = ",", header = T,
quote = "\"", comment.char = "")
airbnb.comp = read.table("../donnees/airBnB-2015-09-02/airbnb-paris-2015-09-02.csv",
sep = ",", header = T,
quote = "\"", comment.char = "")
airbnb.neigh = geojson_read("../donnees/airBnB-2015-09-02/airbnb-paris-2015-09-02-neighbourhoods.geojson", what = "sp")
airbnb.neigh.for = fortify(airbnb.neigh)
ggplot(airbnb.neigh.for, aes(long, lat, group=group)) +
geom_polygon()  + theme_void()
airbnb.neigh.ord = data.frame(
id = as.character(0:19),
neighbourhood = unlist(lapply(geojson_read("../donnees/airBnB-2015-09-02/airbnb-paris-2015-09-02-neighbourhoods.geojson")$features, function(f) return(f$properties$neighbourhood)))
)
airbnb.neigh.cen = merge(airbnb.neigh.ord,
aggregate(cbind(long, lat) ~ id, airbnb.neigh.for,
function (c) return(mean(range(c))))
)
ggplot(airbnb.neigh.for) +
geom_polygon(aes(long, lat, group=group, fill=id), color="gray50") +
geom_point(data=airbnb.summ, aes(longitude, latitude), col="gray30", alpha=.5) +
geom_text(data=airbnb.neigh.cen, aes(long, lat, label=neighbourhood, group=id)) +
theme_void() + theme(legend.position="none")
ggplot(airbnb.neigh.for) +
geom_polygon(aes(long, lat, group=group, fill=id), color="gray50") +
geom_point(data=airbnb.summ, aes(longitude, latitude), col="gray30", alpha=.25) +
geom_text(data=airbnb.neigh.cen, aes(long, lat, label=neighbourhood, group=id)) +
theme_void() + theme(legend.position="none")
ggplot(airbnb.neigh.for) +
geom_polygon(aes(long, lat, group=group, fill=id), color="gray50") +
geom_point(data=airbnb.summ, aes(longitude, latitude, col=id), alpha=.25) +
geom_text(data=airbnb.neigh.cen, aes(long, lat, label=neighbourhood, group=id)) +
theme_void() + theme(legend.position="none")
head(airbnb.summ)
ggplot(airbnb.neigh.for) +
geom_polygon(aes(long, lat, group=group, fill=id), color="gray50") +
geom_point(data=airbnb.summ, aes(longitude, latitude, col=neighbourhood), alpha=.25) +
geom_text(data=airbnb.neigh.cen, aes(long, lat, label=neighbourhood, group=id)) +
theme_void() + theme(legend.position="none")
ggplot(airbnb.neigh.for) +
geom_polygon(aes(long, lat, group=group, fill=id), color="gray50") +
geom_point(data=airbnb.summ, aes(longitude, latitude), col="gray30", alpha=.25) +
geom_text(data=airbnb.neigh.cen, aes(long, lat, label=neighbourhood, group=id)) +
theme_void() + theme(legend.position="none")
m = get_map("Paris, France", zoom = 11,
mapstyle = "toner-lite")
?get_map
m = get_map("Paris, France", zoom = 11,
maptype = "toner-lite")
ggmap(m) +
geom_polygon(data = airbnb.neigh.for,
aes(long, lat, group=group, fill=id),
color="gray50") +
geom_point(data = airbnb.summ,
aes(longitude, latitude),
col="gray30", alpha=.25) +
geom_text(data = airbnb.neigh.cen,
aes(long, lat, label=neighbourhood, group=id)) +
theme_void() + theme(legend.position="none")
m = get_map("Paris, France", zoom = 12,
maptype = "toner-lite")
ggmap(m) +
geom_polygon(data = airbnb.neigh.for,
aes(long, lat, group=group, fill=id),
color="gray50") +
geom_point(data = airbnb.summ,
aes(longitude, latitude),
col="gray30", alpha=.25) +
geom_text(data = airbnb.neigh.cen,
aes(long, lat, label=neighbourhood, group=id)) +
theme_void() + theme(legend.position="none")
m = get_map("Paris, France", zoom = 11.5,
maptype = "toner-lite")
m = get_map("Paris, France", zoom = 11,
maptype = "toner-lite")
ggmap(m) +
geom_polygon(data = airbnb.neigh.for,
aes(long, lat, group=group, fill=id),
color="gray50") +
geom_point(data = airbnb.summ,
aes(longitude, latitude),
col="gray30", alpha=.25) +
geom_text(data = airbnb.neigh.cen,
aes(long, lat, label=neighbourhood, group=id)) +
theme_void() + theme(legend.position="none")
ggmap(m) +
geom_point(data = airbnb.summ,
aes(longitude, latitude),
col="gray30", alpha=.25) +
theme_void() + theme(legend.position="none")
ggmap(m) +
geom_polygon(data = airbnb.neigh.for,
aes(long, lat, group=group, fill=id),
color = "gray50") +
geom_text(data = airbnb.neigh.cen,
aes(long, lat, label=neighbourhood, group=id))
ggmap(m) +
geom_polygon(data = airbnb.neigh.for,
aes(long, lat, group=group, fill=id),
color = "gray50") +
geom_text(data = airbnb.neigh.cen,
aes(long, lat, label=neighbourhood, group=id)) +
theme_void() + theme(legend.position="none")
ggmap(m) +
geom_polygon(data = airbnb.neigh.for,
aes(long, lat, group=group, fill=id),
color = "gray50") +
geom_point(data = airbnb.summ,
aes(longitude, latitude),
col="gray30", alpha=.25) +
geom_text(data = airbnb.neigh.cen,
aes(long, lat, label=neighbourhood, group=id)) +
theme_void() + theme(legend.position="none")
ggmap(m) +
geom_polygon(data = airbnb.neigh.for,
aes(long, lat, group=group, fill=id),
color = "gray50") +
geom_text(data = airbnb.neigh.cen,
aes(long, lat, label=neighbourhood, group=id)) +
theme_void() + theme(legend.position="none")
ggmap(m) +
geom_polygon(data = airbnb.neigh.for,
aes(long, lat, group=group, fill=id),
color = "gray50") +
geom_point(data = airbnb.summ,
aes(longitude, latitude),
col="gray30", alpha=.25) +
geom_text(data = airbnb.neigh.cen,
aes(long, lat, label=neighbourhood, group=id)) +
theme_void() + theme(legend.position="none")
ggmap(m) +
geom_polygon(data = airbnb.neigh.for,
aes(long, lat, group=group, fill=id),
color = "gray50") +
geom_bin2d(data = airbnb.summ,
aes(longitude, latitude),
col="gray30", alpha=.25) +
geom_text(data = airbnb.neigh.cen,
aes(long, lat, label=neighbourhood, group=id)) +
theme_void() + theme(legend.position="none")
ggmap(m) +
geom_polygon(data = airbnb.neigh.for,
aes(long, lat, group=group, fill=id),
color = "gray50") +
geom_bin2d(data = airbnb.summ,
aes(longitude, latitude)) +
geom_text(data = airbnb.neigh.cen,
aes(long, lat, label=neighbourhood, group=id)) +
theme_void() + theme(legend.position="none")
ggmap(m) +
#geom_polygon(data = airbnb.neigh.for,
#             aes(long, lat, group=group, fill=id),
#             color = "gray50") +
geom_bin2d(data = airbnb.summ,
aes(longitude, latitude)) +
#geom_text(data = airbnb.neigh.cen,
#          aes(long, lat, label=neighbourhood, group=id)) +
theme_void() + theme(legend.position="none")
ggmap(m) +
#geom_polygon(data = airbnb.neigh.for,
#             aes(long, lat, group=group, fill=id),
#             color = "gray50") +
geom_bin2d(data = airbnb.summ,
aes(longitude, latitude)) +
geom_text(data = airbnb.neigh.cen,
aes(long, lat, label=neighbourhood, group=id)) +
theme_void() + theme(legend.position="none")
ggmap(m) +
geom_polygon(data = airbnb.neigh.for,
aes(long, lat, group=group, fill=id),
color = "gray50") +
geom_bin2d(data = airbnb.summ,
aes(longitude, latitude)) +
geom_text(data = airbnb.neigh.cen,
aes(long, lat, label=neighbourhood, group=id)) +
theme_void() + theme(legend.position="none")
ggmap(m) +
geom_polygon(data = airbnb.neigh.for,
aes(long, lat, group=group),
color = "gray50") +
geom_bin2d(data = airbnb.summ,
aes(longitude, latitude)) +
geom_text(data = airbnb.neigh.cen,
aes(long, lat, label=neighbourhood, group=id)) +
theme_void() + theme(legend.position="none")
ggmap(m) +
geom_bin2d(data = airbnb.summ,
aes(longitude, latitude)) +
geom_polygon(data = airbnb.neigh.for,
aes(long, lat, group = group),
color = "gray90", alpha = .1) +
geom_text(data = airbnb.neigh.cen,
aes(long, lat, label=neighbourhood, group=id)) +
theme_void() + theme(legend.position="none")
airbnb.summ
head(airbnb.summ)
airbnb.summ %>%
group_by(neighbourhood) %>%
summarise(nblogement = n(),
prixmoyen = mean(price, na.rm = T))
airbnb.summ %>%
group_by(neighbourhood) %>%
summarise(nblogement = n(),
prixmoyen = mean(price, na.rm = T))
resume = airbnb.summ %>%
group_by(neighbourhood) %>%
summarise(nblogement = n(),
prixmoyen = mean(price, na.rm = T))
resume
knitr::kable(resume, digits = 2)
knitr::kable(resume, digits = 2)
knitr::kable(resume, digits = 2)
merge(resume, airbnb.comp)
merge(resume, airbnb.ord)
merge(resume, airbnb.neigh.ord)
airbnb.resume = resume %>%
inner_join(airbnb.neigh.ord) %>%
inner_join(airbnb.neigh.for)
resume %>%
inner_join(airbnb.neigh.ord)
resume %>%
inner_join(airbnb.neigh.ord)
resume %>%
full_join(airbnb.neigh.ord)
full_join(airbnb.neigh.ord)
resume %>%
full_join(airbnb.neigh.ord)
resume
unique(airbnb.summ$neighbourhood)
??encoding
airbnb.summ = read.table("../donnees/airBnB-2015-09-02/airbnb-paris-2015-09-02-summary.csv",
sep = ",", header = T,
quote = "\"", comment.char = "",
encoding = "UTF-8")
resume = airbnb.summ %>%
group_by(neighbourhood) %>%
summarise(nblogement = n(),
prixmoyen = mean(price, na.rm = T))
resume
resume %>%
full_join(airbnb.neigh.ord)
resume %>%
full_join(airbnb.neigh.ord)
airbnb.resume = resume %>%
full_join(airbnb.neigh.ord) %>%
inner_join(airbnb.neigh.for)
ggmap(m) +
geom_polygon(data = airbnb.resume,
aes(long, lat, group=group, fill=nblogement),
color = "gray50") +
geom_text(data = airbnb.neigh.cen,
aes(long, lat, label=neighbourhood, group=id)) +
theme_void()
ggmap(m) +
geom_polygon(data = airbnb.resume,
aes(long, lat, group=group, fill=prixmoyen),
color = "gray50") +
geom_text(data = airbnb.neigh.cen,
aes(long, lat, label=neighbourhood, group=id)) +
theme_void()
update.packages()
update.packages()
