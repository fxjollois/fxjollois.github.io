??"root knitr"
knitr::opts_knit
knitr::opts_knit()
setwd("donnees/Comptoir2000/Comptoir2000-csv/")
getwd()
setwd("~/Sites/fxjollois.github.io")
setwd("donnees/Comptoir2000/Comptoir2000-csv/")
read.table("Cat")
Categorie = read.table("Categorie.txt",
header = T, sep = ";", quote = '"', encoding = "UTF-8")
dir()
Categorie = read.table("Categorie.txt",
header = T, sep = ";", quote = '"', encoding = "UTF-8")
Client = read.table("Client.txt",
header = T, sep = ";", quote = '"', encoding = "UTF-8")
setwd("~/Sites/fxjollois.github.io")
Fournisseur = read.table("Fournisseur.txt",
header = T, sep = ";", quote = '"', encoding = "UTF-8")
Categorie = read.table("Categorie.txt",
header = T, sep = ";", quote = '"', encoding = "UTF-8")
getwd()
setwd("donnees/Comptoir2000/Comptoir2000-csv/")
dir()
Categorie = read.table("Categorie.txt",
header = T, sep = ";", quote = '"', encoding = "UTF-8")
Categorie = read.table("Categorie.txt",
header = T, sep = ";", quote = '"', encoding = "UTF-8")
Client = read.table("Client.txt",
header = T, sep = ";", quote = '"', encoding = "UTF-8")
Categorie = read.table("Categorie.txt",
header = T, sep = ";", quote = '"', encoding = "UTF-8")
knitr::opts_knit$set(root.dir = "donnees/Comptoir2000/Comptoir2000-csv/")
A = subset(Employe, subset = Pays == "Royaume-Uni", select = c(Nom, prenom))
knitr::kable(A, row.names = FALSE, caption = "Employés du Royaume-Uni")
knitr::kable(D3, row.names = FALSE, caption = "Répartition des produits par pays")
D1 = merge(Produit, Fournisseur)
D2 = aggregate(Refprod ~ Pays, D1, length)
D3 = setNames(D2, c("Pays", "Effectif"))
knitr::kable(D3, row.names = FALSE, caption = "Répartition des produits par pays")
F = merge(Commande, DetailCommande)
names(Commande)
names(DetailCommande)
F = merge(Commande, DetailCommande, by.x = "NoCom", by.y = "Nocom")
F1 = transform(F, coutProduit = PrixUnit * Qte * (1 - Remise))
F1 = transform(F, coutProduit = PrixUnit * Qte * (1 - Remise.))
F2a = aggregate(coutProduit ~ NoCom, F1, length)
F2b = setNames(F2a, c("NoCom", "NbProduit"))
F3b = setNames(F3a, c("NoCom", "MontantProduit"))
F4 = merge(merge(Commande, F2b), F3b)
F3a = aggregate(coutProduit ~ NoCom, F1, sum)
F3b = setNames(F3a, c("NoCom", "MontantProduit"))
F4 = merge(merge(Commande, F2b), F3b)
View(F4)
F5 = susbet(F4, select = c(NoCom, Port, MontantProduit, NbProduit))
F5 = subset(F4, select = c(NoCom, Port, MontantProduit, NbProduit))
F6 = transform(F5, MontantCommande = Port + MontantProduit)
head(F6)
F6
F = merge(Commande, DetailCommande, by.x = "NoCom", by.y = "Nocom")
F1 = transform(F, coutProduit = PrixUnit * Qte * (1 - Remise.))
F2a = aggregate(coutProduit ~ NoCom, F1, length)
F2b = setNames(F2a, c("NoCom", "NbProduits"))
F3a = aggregate(coutProduit ~ NoCom, F1, sum)
F3b = setNames(F3a, c("NoCom", "MtProduits"))
F4 = merge(merge(Commande, F2b), F3b)
F5 = subset(F4, select = c(NoCom, Port, MtProduits, NbProduits))
MontantCommande = transform(F5, MtCommande = Port + MtProduits)
knitr::kable(head(MontantCommande), row.names = FALSE, caption = "")
F1 = transform(DetailCommande, coutProduit = PrixUnit * Qte * (1 - Remise.))
F2a = aggregate(coutProduit ~ NoCom, F1, length)
F2a = aggregate(coutProduit ~ Nocom, F1, length)
F2b = setNames(F2a, c("NoCom", "NbProduits"))
F3a = aggregate(coutProduit ~ Nocom, F1, sum)
F3b = setNames(F3a, c("NoCom", "MtProduits"))
F4 = merge(merge(Commande, F2b), F3b)
F5 = subset(F4, select = c(NoCom, Port, MtProduits, NbProduits))
MontantCommande = transform(F5, MtCommande = Port + MtProduits)
knitr::kable(head(MontantCommande), row.names = FALSE, caption = "")
G = merge(merge(Client, Commande), MontantCommande)
G1 = merge(merge(Client, Commande), MontantCommande)
G1 = merge(Commande, MontantCommande)
G2 = aggregate(MontantCommande ~ CodeCli, G1, sum)
rm(G)
G2 = aggregate(MtCommande ~ CodeCli, G1, sum)
G3 = merge(Client, G2)
G2 = aggregate(MtCommande ~ CodeCli, G1, sum)
G3 = setNames(G2, c("CodeCli", "MontantCommandes"))
G4 = merge(Client, G3)
G5 = subset(G4, select = )
G5 = subset(G4, select = c(Societe, MontantCommandes))
G6 = G5[order(G5$MontantCommandes, decreasing = TRUE),]
knitr::kable(G6, row.names = FALSE, caption = "Chiffre d'affaires de chaque client")
H1 = aggregate(MontantCommandes ~ Pays, G4, sum)
H2 = H1[order(H1$MontantCommandes),]
knitr::kable(H2, row.names = FALSE, caption = "Chiffre d'affaries par pays")
H2 = H1[order(H1$MontantCommandes, decreasing = TRUE),]
knitr::kable(H2, row.names = FALSE, caption = "Chiffre d'affaries par pays")
qplot(Species, value, data = m, facets = ~ variable)
library(ggplot2)
library(reshape2) # pour les données tips
m = melt(iris)
qplot(Species, value, data = m, facets = ~ variable)
qplot(Species, value, data = m, facets = ~ variable, geom = "boxplot")
head(m)
qplot(Species, value, data = m, facets = variable ~., geom = "boxplot")
?facet_grid
qplot(Species, value, data = m, facets = variable ~ ., geom = "boxplot", scales = "free")
qplot(sex, smoker, data = tips, color = total_bill, geom = "bin2d")
qplot(sex, smoker, data = tips, fill = total_bill, geom = "bin2d")
qplot(sex, smoker, data = tips, color = total_bill, geom = "bin2d")
t = aggregate(total_bill ~ sex + smoker, tips, mean)
qplot(sex, smoker, data = tips, color = total_bill, geom = "bin2d")
t = aggregate(total_bill ~ sex + smoker, tips, mean)
qplot(sex, smoker, data = t, color = total_bill, geom = "bin2d")
qplot(sex, smoker, data = t, fill = total_bill, geom = "bin2d")
qplot(sex, smoker, data = t, fill = total_bill, geom = "bin2d")
qplot(sex, total_bil, data = tips, facets = ~ smoker, geom = "boxplot")
qplot(sex, total_bill, data = tips, facets = ~ smoker, geom = "boxplot")
qplot(sex, total_bill, data = tips, facets = ~ smoker, color = smoker, geom = "boxplot")
qplot(sex, total_bill, data = tips, color = smoker, geom = "boxplot")
?geom_boxplot
qplot(sex, total_bill, data = tips, color = smoker, geom = "boxplot", notchwidth = 0.25)
qplot(sex, total_bill, data = tips, color = smoker, geom = "boxplot", varwidth = T)
qplot(sex, total_bill, data = tips, color = smoker, geom = "boxplot")
qplot(sex, total_bill, data = tips, facets = ~ smoker, geom = "boxplot")
qplot(total_bill, tip, data = tips, color = sex)
qplot(total_bill, tip, data = tips, color = sex, facets = ~ sex)
qplot(cut(total_bill, 5), tip, data = tips, color = sex, facets = ~ sex)
qplot(cut(total_bill, 5), tip, data = tips, color = sex, facets = ~ sex, geom = "boxplot")
qplot(cut(total_bill, 3), tip, data = tips, color = sex, facets = ~ sex, geom = "boxplot")
qplot(total_bill, tip, data = tips, color = sex, symbol = smoker, facets = smoker ~ sex)
?qplot
?Aes
?aes
qplot(total_bill, tip, data = tips, color = sex, shape = smoker, facets = smoker ~ sex)
qplot(cut(total_bill, 3), tip, data = tips, geom = "boxplot",
color = sex, shape = smoker,
facets = smoker ~ sex)
qplot(cut(total_bill, 3), tip, data = tips,
color = sex, geom = "boxplot",
facets = smoker ~ sex)
qplot(total_bill, tip, data = tips, geom = c("smooth", "point"))
library(ggplot2)
library(reshape2) # pour les données tips
m = melt(iris)
qplot(Species, value, data = m, facets = variable ~ ., geom = "boxplot")
qplot(sex, total_bill, data = tips, facets = ~ smoker, geom = "boxplot")
t = aggregate(total_bill ~ sex + smoker, tips, mean)
qplot(sex, smoker, data = t, fill = total_bill, geom = "bin2d")
qplot(total_bill, tip, data = tips, color = sex)
qplot(total_bill, tip, data = tips, color = sex, facets = ~ sex)
qplot(cut(total_bill, 3), tip, data = tips, color = sex, facets = ~ sex, geom = "boxplot")
qplot(total_bill, tip, data = tips,
color = sex, shape = smoker,
facets = smoker ~ sex)
qplot(cut(total_bill, 3), tip, data = tips,
color = sex, geom = "boxplot",
facets = smoker ~ sex)
qplot(total_bill, tip, data = tips, geom = c("smooth", "point"))
ans = transform(
melt(transform(anscombe, id = 1:nrow(anscombe)), id.vars = "id"),
axe = substr(as.character(variable), 1, 1),
num = as.numeric(substr(as.character(variable), 2, 2))
)
ans$facetX = ans$num %% 2 == 0
ans$facetY = ans$num <= 2
ansX = subset(ans, subset = axe == "x")
ansY = subset(ans, subset = axe == "y")
ansXY = merge(ansX, ansY, by = c("id", "num"))
ggplot(ansXY, aes(value.x, value.y)) + geom_point() +
facet_grid(facetY.x ~ facetX.x) +
geom_smooth(method = "lm", se = FALSE, fullrange = T)
qplot(day, tip, data = tips, geom = "boxplot")
qplot(day, tip, data = tips, geom = c("boxplot", "jitter"))
qplot(party, tip, data = tips, geom = c("smooth", "point"))
head(ips)
head(tips)
qplot(size, tip, data = tips, geom = c("smooth", "point"))
qplot(size, tip, data = tips, geom = "jitter")
qplot(size, tip, data = tips, geom = c("boxplot", "jitter"))
qplot(size, tip, data = tips, groupe = size, geom = c("boxplot", "jitter"))
qplot(size, tip, data = tips, group = size, geom = c("boxplot", "jitter"))
qplot(factor(size), tip, data = tips, geom = c("boxplot", "jitter"))
qplot(total_bill, size, data = tips, size = tip)
qplot(total_bill, size, data = tips, size = tip, color = tip)
qplot(total_bill, size, data = tips, size = tip, color = tip, geom = "bin2d")
qplot(total_bill, size, data = tips, size = tip, fill = tip, geom = "bin2d")
qplot(cut(total_bill, 5), cut(size, 5), data = tips,
size = tip, fill = tip, geom = "bin2d")
qplot(total_bill, size, data = tips,
size = tip, fill = tip, geom = "bin2d", bins = 5)
qplot(total_bill, size, data = tips,
color = tip, fill = tip, geom = "bin2d", bins = 5)
qplot(total_bill, size, data = tips,
# color = tip, fill = tip,
geom = "bin2d", bins = 5)
qplot(total_bill, size, data = tips,
weight = tip,
# color = tip, fill = tip,
geom = "bin2d", bins = 5)
qplot(total_bill.f, size.f, data = t2,
color = tip,
# color = tip, fill = tip,
geom = "bin2d", bins = 5)
t1 = transform(tips, total_bill.f = cut(total_bill, 5), size.f = cut(size, 5))
t2 = aggregate(tip ~ total_bill.f + size.f, t1, median)
qplot(total_bill.f, size.f, data = t2,
color = tip,
# color = tip, fill = tip,
geom = "bin2d", bins = 5)
t1 = transform(tips, total_bill.f = cut(total_bill, 5), size.f = cut(size, 5))
t2 = aggregate(tip ~ total_bill.f + size.f, t1, median)
qplot(total_bill.f, size.f, data = t2,
color = tip,
geom = "bin2d")
t1 = transform(tips, total_bill.f = cut(total_bill, 5), size.f = cut(size, 5))
t2 = aggregate(tip ~ total_bill.f + size.f, t1, median)
qplot(total_bill.f, size.f, data = t2,
fill = tip,
geom = "bin2d")
t2
?qplot
ans = transform(
melt(transform(anscombe, id = 1:nrow(anscombe)), id.vars = "id"),
axe = substr(as.character(variable), 1, 1),
num = as.numeric(substr(as.character(variable), 2, 2))
)
ans$facetX = ans$num %% 2 == 0
ans$facetY = ans$num <= 2
ansX = subset(ans, subset = axe == "x")
ansY = subset(ans, subset = axe == "y")
ansXY = merge(ansX, ansY, by = c("id", "num"))
ansXY
View(ansXY)
ans1 = transform(subset(anscombe, select = c(x1, y1)), ex = 1)
ans1
ans2 = transform(subset(anscombe, select = c(x2, y2)), ex = 2)
rbind(ans1, ans2)
ans1 = transform(setNames(subset(anscombe, select = c(x1, y1)), c("x", "y")), ex = 1)
ans2 = transform(setNames(subset(anscombe, select = c(x2, y2)), c("x", "y")), ex = 2)
ans3 = transform(setNames(subset(anscombe, select = c(x3, y3)), c("x", "y")), ex = 3)
ans4 = transform(setNames(subset(anscombe, select = c(x4, y4)), c("x", "y")), ex = 4)
ans = rbind(ans1, ans2, ans3, ans4)
qplot(x, y, data = ans, facets = ~ ex)
qplot(x, y, data = ans, facets = ~ ex, geom = c("smooth", "point"))
qplot(x, y, data = ans, facets = ~ ex, geom = "point")
lapply(1:4, function (ex) {
t = anscombe[,paste(c("x", "y"), ex, sep = "")]
return(t)
})
ans = lapply(1:4, function (ex) {
t = anscombe[,paste(c("x", "y"), ex, sep = "")]
t = setNames(t, c("x", "y"))
t = transform(t, ex = ex)
return(t)
})
ans1 = transform(setNames(subset(anscombe, select = c(x1, y1)), c("x", "y")), ex = 1)
ans2 = transform(setNames(subset(anscombe, select = c(x2, y2)), c("x", "y")), ex = 2)
ans3 = transform(setNames(subset(anscombe, select = c(x3, y3)), c("x", "y")), ex = 3)
ans4 = transform(setNames(subset(anscombe, select = c(x4, y4)), c("x", "y")), ex = 4)
ans = rbind(ans1, ans2, ans3, ans4)
qplot(x, y, data = ans, facets = ~ ex, geom = "point")
ans = lapply(1:4, function (ex) {
t = anscombe[,paste(c("x", "y"), ex, sep = "")]
t = setNames(t, c("x", "y"))
t = transform(t, ex = ex)
return(t)
})
ans
ans = sapply(1:4, function (ex) {
t = anscombe[,paste(c("x", "y"), ex, sep = "")]
t = setNames(t, c("x", "y"))
t = transform(t, ex = ex)
return(t)
})
ans
??map
??"map"
??reduce
?Reduce
Reduce(function (a, b) { return (rbind(a, b))}, ans)
ans = lapply(1:4, function (ex) {
t = anscombe[,paste(c("x", "y"), ex, sep = "")]
t = setNames(t, c("x", "y"))
t = transform(t, ex = ex)
return(t)
})
Reduce(function (a, b) { return (rbind(a, b))}, ans)
t = transform(setNames(anscombe[,paste(c("x", "y"), ex, sep = "")],
c("x", "y")),
ex = ex)
ans = lapply(1:4, function (ex) {
t = transform(setNames(anscombe[,paste(c("x", "y"), ex, sep = "")],
c("x", "y")),
ex = ex)
return(t)
})
ans = Reduce(function (a, b) { return (rbind(a, b))}, ans)
qplot(x, y, data = ans, facets = ~ ex, geom = "point")
anster = Reduce(function (a, b) { return (rbind(a, b))}, ansbis)
ansbis = lapply(1:4, function (ex) {
t = transform(setNames(anscombe[,paste(c("x", "y"), ex, sep = "")],
c("x", "y")),
ex = ex)
return(t)
})
anster = Reduce(function (a, b) { return (rbind(a, b))}, ansbis)
qplot(x, y, data = anster, facets = ~ ex, geom = "point")
qplot(total_bill, tip, data = tips, geom = c("smooth", "point"))
ans = rbind(
transform(setNames(subset(anscombe, c(x1, y1)), c("x", "y")), ex = 1)
)
ans = rbind(
transform(setNames(subset(anscombe, select = c(x1, y1)), c("x", "y")), ex = 1)
)
transform(setNames(subset(anscombe, select = c(x1, y1)), c("x", "y")), ex = 1)
ans = rbind(
transform(setNames(subset(anscombe, select = c(x1, y1)), c("x", "y")), ex = 1),
transform(setNames(subset(anscombe, select = c(x2, y2)), c("x", "y")), ex = 2),
transform(setNames(subset(anscombe, select = c(x3, y3)), c("x", "y")), ex = 3),
transform(setNames(subset(anscombe, select = c(x4, y4)), c("x", "y")), ex = 4)
)
ans
ggplot(ans, aes(x, y)) +
geom_point() +
facet_wrap(~ ex)
ggplot(ans, aes(x, y)) +
geom_point() +
geom_smooth(fullrange = T)
ggplot(ans, aes(x, y)) +
geom_point() +
geom_smooth(method = "lm", fullrange = T) +
facet_wrap(~ ex)
ggplot(ans, aes(x, y)) +
geom_point() +
geom_smooth(method = "lm", fullrange = T, se = FALSE) +
facet_wrap(~ ex)
library(ggplot2)
ggplot(metl(iris), aes(Species, value)) +
geom_boxplot() +
facet_grid(~ variable)
library(reshape2)
ggplot(metl(iris), aes(Species, value)) +
geom_boxplot() +
facet_grid(~ variable)
ggplot(melt(iris), aes(Species, value)) +
geom_boxplot() +
facet_grid(~ variable)
ggplot(melt(iris, id = "Species"), aes(Species, value)) +
geom_boxplot() +
facet_grid(~ variable)
ggplot(melt(iris, id = "Species"), aes(Species, value)) +
geom_boxplot() +
facet_grid(~ variable) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(tips, aes(0, total_bill)) +
geom_boxplot() +
facet_grid(sex ~ smoker, labeller = label_both)
ggplot(tips, aes(0, total_bill)) +
geom_boxplot() +
facet_grid( ~ sex + smoker, labeller = label_both)
ggplot(tips, aes(sex, total_bill)) +
geom_boxplot() +
facet_grid( ~ smoker, labeller = label_both)
aggregate(total_bill ~ sex + smoker, tips, median)
ggplot(aggregate(total_bill ~ sex + smoker, tips, median),
aes(sex, smoker, fill = total_bill)) +
geom_bin2d()
ggplot(tips, aes(total_bill, tip, color = sex)) +
geom_point() +
geom_smooth() +
facet_grid(~ sex)
ggplot(tips, aes(total_bill, tip, color = sex)) +
geom_point() +
geom_smooth(method = "lm") +
facet_grid(~ sex)
ggplot(tips, aes(cut(total_bill, 5), tip, color = sex)) +
geom_boxplot() +
facet_grid(~ sex)
ggplot(tips, aes(cut(total_bill, 5), tip, fill = sex)) +
geom_boxplot() +
facet_grid(~ sex)
ggplot(tips, aes(cut(total_bill, 5), tip, fill = sex)) +
geom_boxplot() +
facet_grid(~ sex) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(aggreagate(tip ~ sex + total_bill_cut,
transform(tips, total_bill_cut = cut(total_bill, 5)),
median),
aes(sex, total_bill_cut, fill = tip)) +
geom_bin2d()
ggplot(aggregate(tip ~ sex + total_bill_cut,
transform(tips, total_bill_cut = cut(total_bill, 5)),
median),
aes(sex, total_bill_cut, fill = tip)) +
geom_bin2d()
ggplot(aggregate(tip ~ sex + total_bill_cut,
transform(tips, total_bill_cut = cut(total_bill, 5)),
median),
aes(total_bill_cut, sex, fill = tip)) +
geom_bin2d()
ggplot(tips, aes(total_bill, tip, color = sex)) +
geom_point() +
geom_smooth(method = "lm") +
facet_grid(~ smoker, labeller = label_both)
ggplot(tips, aes(total_bill, tip, color = sex)) +
geom_point() +
geom_smooth(method = "lm") +
facet_grid(smoker ~ sex, labeller = label_both)
ggplot(tips, aes(total_bill, tip, color = sex)) +
geom_point() +
geom_smooth(method = "lm", fullrange = T) +
facet_grid(smoker ~ sex, labeller = label_both)
ggplot(tips, aes(total_bill, tip)) +
geom_point() +
geom_smooth(method = "lm", fullrange = T) +
facet_grid(smoker ~ sex, labeller = label_both)
ggplot(tips, aes(total_bill, tip)) +
geom_point() +
geom_smooth(method = "lm")
ggplot(tips, aes(day, tip)) +
geom_jitter(width = .2)
ggplot(tips, aes(day, tip)) +
geom_boxplot() +
scale_x_discrete(labels = c("Thur", "Fri", "Sat", "Sun"))
ggplot(tips, aes(day, tip)) +
geom_boxplot() +
scale_x_discrete(labels = c("Thur", "Fri", "Sat", "Sun"))
ggplot(tips, aes(day, tip)) +
geom_boxplot()
ggplot(tips, aes(day, tip)) +
geom_boxplot() +
scale_x_discrete(breaks = c("Thur", "Fri", "Sat", "Sun"))
?scale_x_discrete
ggplot(tips, aes(day, tip)) +
geom_boxplot() +
scale_x_discrete(limits = c("Thur", "Fri", "Sat", "Sun"))
ggplot(tips, aes(day, tip)) +
geom_boxplot() +
geom_jitter()
ggplot(tips, aes(size, tip)) +
geom_boxplot() +
geom_jitter()
ggplot(tips, aes(size, tip, group = size)) +
geom_boxplot() +
geom_jitter()
ggplot(tips, aes(factor(size), tip)) +
geom_boxplot() +
geom_jitter()
ggplot(tips, aes(size, tip)) +
geom_boxplot(aes(group = size)) +
geom_jitter()
ggplot(tips, aes(size, tip)) +
geom_boxplot(aes(group = size)) +
geom_jitter() +
geom_smooth(method = "lm", se = FALSE)
ggplot(tips, aes(total_bill, size, size = tip)) +
geom_point()
ggplot(tips, aes(size, total_bill, size = tip)) +
geom_point()
ggplot(tips, aes(size, total_bill, size = tip)) +
geom_jitter(width = .2)
ggplot(tips, aes(size, total_bill, size = tip, color = tip)) +
geom_jitter(width = .2)
transform(tips, total_bill_cut = cut(total_bill, 5))
aggregate(tip ~ total_bill_cut + size,
transform(tips, total_bill_cut = cut(total_bill, 5)),
median)
ggplot(aggregate(tip ~ total_bill_cut + size,
transform(tips, total_bill_cut = cut(total_bill, 5)),
median),
aes(total_bill, size, fill = tip) +
geom_bin2d()
ggplot(aggregate(tip ~ total_bill_cut + size,
ggplot(aggregate(tip ~ total_bill_cut + size,
transform(tips, total_bill_cut = cut(total_bill, 5)),
median),
aes(total_bill, size, fill = tip)) +
geom_bin2d()
ggplot(aggregate(tip ~ total_bill_cut + size,
transform(tips, total_bill_cut = cut(total_bill, 5)),
median),
aes(total_bill_cut, size, fill = tip)) +
geom_bin2d()
ggplot(aggregate(tip ~ total_bill_cut + factor(size),
transform(tips, total_bill_cut = cut(total_bill, 5)),
median),
aes(total_bill_cut, size, fill = tip)) +
geom_bin2d()
aggregate(tip ~ total_bill_cut + factor(size),
transform(tips, total_bill_cut = cut(total_bill, 5)),
median)
ggplot(aggregate(tip ~ total_bill_cut + size,
transform(tips, total_bill_cut = cut(total_bill, 5)),
median),
aes(total_bill_cut, factor(size), fill = tip)) +
geom_bin2d()
ggplot(aggregate(tip ~ total_bill_cut + size,
transform(tips, total_bill_cut = cut(total_bill, 5)),
median),
aes(total_bill_cut, factor(size), fill = tip)) +
geom_bin2d() +
ylab("size")
data()
AirPAssenger
ls()
lapply(ls(), object.size)
format(lapply(ls(), object.size), "auto")
format(sapply(ls(), object.size), "auto")
lapply(ls(), function (o) return (format(object.size(o), "auto")))
sapply(ls(), function (o) return (format(object.size(o), "auto")))
gc()
