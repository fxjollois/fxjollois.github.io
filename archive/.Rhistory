setwd("~/Documents/fxjollois.github.io/archive")
liste = dir()
?dir
liste_md = dir(pattern = "*.*md")
rm(liste)
liste_md
liste_html = dir(pattern = "*.html")
gsub(liste_md, ".md")
?gsub
gsub(".md", "", liste_md)
gsub("\.md", "", liste_md)
gsub("\\.md", "", liste_md)
gsub("\\.[R]*md", "", liste_md)
gsub("\\.html", "", liste_html)
gsub("\\.[R]*md", "", liste_md) %in% gsub("\\.html", "", liste_html)
!(gsub("\\.[R]*md", "", liste_md) %in% gsub("\\.html", "", liste_html))
liste_md[!(gsub("\\.[R]*md", "", liste_md) %in% gsub("\\.html", "", liste_html))]
for (f in liste_md[!(gsub("\\.[R]*md", "", liste_md) %in% gsub("\\.html", "", liste_html))])
rmarkdown::render(f)
library(mclust)
library(Rmixmod)
# We also need
library(ggplot2)
mBIC = mclustBIC(iris[-5])
summary(mBIC)
plot(mBIC)
mBIC1 = Mclust(iris[-5], x = mBIC)
summary(mBIC1, parameters = TRUE)
table(mBIC1$classification)
t(mBIC1$parameters$mean)
plot(mBIC1, what = "classification")
plot(mBIC1, what = "uncertainty")
plot(mBIC1, what = "density")
table(iris$Species, mBIC1$classification)
mBIC2 = Mclust(iris[-5], G = 3, modelNames = "VEV")
table(mBIC2$classification)
t(mBIC2$parameters$mean)
plot(mBIC2, what = "classification")
table(iris$Species, mBIC2$classification)
mICL = mclustICL(iris[-5])
summary(mICL)
plot(mICL)
mICL1 = Mclust(iris[-5],
G = 2,
modelNames = "VEV")
summary(mICL1, parameters = TRUE)
table(mICL1$classification)
t(mICL1$parameters$mean)
plot(mICL1, what = "classification")
table(iris$Species, mICL1$classification)
G = attr(mBIC, "G")
modelNames = attr(mBIC, "modelNames")
d = attr(mBIC, "d")
criterion = data.frame(G = rep(G, length(modelNames)),
model = rep(modelNames, each = length(G)),
AIC = NA,
AIC3 = NA,
stringsAsFactors = FALSE)
for (i in 1:nrow(criterion)) {
m = Mclust(iris[-5], G = criterion$G[i],
modelNames = criterion$model[i])
p = nMclustParams(criterion$model[i], d, criterion$G[i])
criterion[i, "AIC"] = -2 * m$loglik + 2 * p
criterion[i, "AIC3"] = -2 * m$loglik + 3 * p
}
head(criterion[order(criterion$AIC),], 3)
ggplot(criterion, aes(G, AIC, color = model)) +
geom_line() +
scale_x_discrete(limits = G)
head(criterion[order(criterion$AIC3),], 3)
ggplot(criterion, aes(G, AIC3, color = model)) +
geom_line() +
scale_x_discrete(limits = G)
liste_md = dir(pattern = "*.*md")
liste_html = dir(pattern = "*.html")
liste_md[!(gsub("\\.[R]*md", "", liste_md) %in% gsub("\\.html", "", liste_html))]
criterion
library(mclust)
library(Rmixmod)
# We also need
library(ggplot2)
mBIC = mclustBIC(iris[-5])
summary(mBIC)
plot(mBIC)
mBIC1 = Mclust(iris[-5], x = mBIC)
summary(mBIC1, parameters = TRUE)
table(mBIC1$classification)
t(mBIC1$parameters$mean)
plot(mBIC1, what = "classification")
plot(mBIC1, what = "uncertainty")
plot(mBIC1, what = "density")
table(iris$Species, mBIC1$classification)
mBIC2 = Mclust(iris[-5], G = 3, modelNames = "VEV")
table(mBIC2$classification)
t(mBIC2$parameters$mean)
plot(mBIC2, what = "classification")
table(iris$Species, mBIC2$classification)
mICL = mclustICL(iris[-5])
summary(mICL)
plot(mICL)
mICL1 = Mclust(iris[-5],
G = 2,
modelNames = "VEV")
summary(mICL1, parameters = TRUE)
table(mICL1$classification)
t(mICL1$parameters$mean)
plot(mICL1, what = "classification")
table(iris$Species, mICL1$classification)
G = attr(mBIC, "G")
modelNames = attr(mBIC, "modelNames")
d = attr(mBIC, "d")
criterion = data.frame(G = rep(G, length(modelNames)),
model = rep(modelNames, each = length(G)),
AIC = NA,
AIC3 = NA,
stringsAsFactors = FALSE)
criterion
i
i = 1
criterion$G[i]
criterion$model[i]
m = Mclust(iris[-5], G = criterion$G[i],
modelNames = criterion$model[i])
p = nMclustParams(criterion$model[i], d, criterion$G[i])
criterion[i, "AIC"] = -2 * m$loglik + 2 * p
criterion[i, "AIC3"] = -2 * m$loglik + 3 * p
for (i in 1:nrow(criterion)) {
m = Mclust(iris[-5], G = criterion$G[i],
modelNames = criterion$model[i])
p = nMclustParams(criterion$model[i], d, criterion$G[i])
criterion[i, "AIC"] = -2 * m$loglik + 2 * p
criterion[i, "AIC3"] = -2 * m$loglik + 3 * p
}
i
criterion[i,]
criterion[i-1,]
m
m = Mclust(iris[-5], G = criterion$G[i],
modelNames = criterion$model[i])
p = nMclustParams(criterion$model[i], d, criterion$G[i])
criterion[i, "AIC"] = -2 * m$loglik + 2 * p
