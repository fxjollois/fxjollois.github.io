setwd("~/Sites/fxjollois.github.io/logiciels-stats")
ca = read.table("ca/ca.csv", header = T, sep = ";")
View(ca)
rm(ca)
table = "ca"
nom = paste("ca/", table, ".csv", sep = "")
assign(table, read.table(nom, header = T, sep = ";"))
import <- function (table) {
nom = paste("ca/", table, ".csv", sep = "")
assign(table, read.table(nom, header = T, sep = ";"))
}
import(ca)
import(mois)
import(provenance)
import(groupe)
import <- function (table) {
nom = paste("ca/", table, ".csv", sep = "")
assign(table, read.table(nom, header = T, sep = ";"))
}
import("ca")
import("mois")
import("provenance")
import("groupe")
import <- function (table) {
nom = paste("ca/", table, ".csv", sep = "")
print(nom)
assign(table, read.table(nom, header = T, sep = ";"))
}
import("ca")
import("mois")
import("provenance")
import("groupe")
import <- function (table) {
nom = paste("ca/", table, ".csv", sep = "")
print(nom)
donnees = read.table(nom, header = T, sep = ";")
assign(table, donnees)
}
import("ca")
import("mois")
import("provenance")
import("groupe")
import <- function (table) {
nom = paste("ca/", table, ".csv", sep = "")
print(nom)
donnees = read.table(nom, header = T, sep = ";")
print(dim(donnees))
assign(table, donnees)
}
import("ca")
import("mois")
import("provenance")
import("groupe")
?assign
import <- function (table) {
nom = paste("ca/", table, ".csv", sep = "")
print(nom)
donnees = read.table(nom, header = T, sep = ";")
print(dim(donnees))
assign(table, donnees, envir = .GlobalEnv)
}
import("ca")
import("mois")
import("provenance")
import("groupe")
import <- function (table) {
nom = paste("ca/", table, ".csv", sep = "")
assign(table, read.table(nom, header = T, sep = ";"), envir = .GlobalEnv)
}
import("ca")
import("mois")
import("provenance")
import("groupe")
import("ca")
import("mois")
import("provenance")
import("groupe")
import("groupe")
View(groupe)
import <- function (table) {
nom = paste("ca/", table, ".csv", sep = "")
assign(table, read.table(nom, header = T, sep = ";", quote = "\""), envir = .GlobalEnv)
}
import("ca")
import("mois")
import("provenance")
import("groupe")
View(groupe)
attributes(ca)
names(ca)
eval(ca)
quote(ca)
char = quote(ca)
char
as.character(char)
rm(import)
rm(char)
eval("ncol(ca)")
evaluate::evaluate("ncol(ca)")
?evaluate
eval("ncol(ca)")
?eval
evalq("ncol(ca)")
get("ncol(ca)")
sapply(ls(), function (tab) {
data = get(tab)
return (list(table = tab, lignes = nrow(data), colonnes = ncol(data)))
})
t(sapply(ls(), function (tab) {
data = get(tab)
return (list(table = tab, lignes = nrow(data), colonnes = ncol(data)))
}))
t(sapply(ls(), function (tab) {
data = get(tab)
return (list(lignes = nrow(data), colonnes = ncol(data)))
}))
demande1 = data.frame(
statistique = c("Somme", "Moyenne", "Médiane", "Minimum", "Maximum", "Q1",  "Q3"),
valeur = c(sum(ca$ca, na.rm = TRUE), mean(ca$ca, na.rm = TRUE),
median(ca$ca, na.rm = TRUE), min(ca$ca, na.rm = TRUE),
max(ca$ca, na.rm = TRUE), quantile(ca$ca, na.rm = TRUE, .25),
quantile(ca$ca, na.rm = TRUE, .75))
)
print(demande1)
quantile(ca$ca, na.rm = TRUE, .75)
demande1 = data.frame(
statistique = c("Somme", "Moyenne", "Médiane", "Minimum", "Maximum", "Q1",  "Q3"),
valeur = as.character(c(sum(ca$ca, na.rm = TRUE), mean(ca$ca, na.rm = TRUE),
median(ca$ca, na.rm = TRUE), min(ca$ca, na.rm = TRUE),
max(ca$ca, na.rm = TRUE), quantile(ca$ca, na.rm = TRUE, .25),
quantile(ca$ca, na.rm = TRUE, .75)))
)
print(demande1)
demande1 = data.frame(
statistique = c("Somme", "Moyenne", "Médiane", "Minimum", "Maximum", "Q1",  "Q3"),
valeur = as.character(round(c(sum(ca$ca, na.rm = TRUE), mean(ca$ca, na.rm = TRUE),
median(ca$ca, na.rm = TRUE), min(ca$ca, na.rm = TRUE),
max(ca$ca, na.rm = TRUE), quantile(ca$ca, na.rm = TRUE, .25),
quantile(ca$ca, na.rm = TRUE, .75)), 2))
)
print(demande1)
ca_all = merge(merge(merge(ca, groupe, by.x = "groupe_no", by.y = "no"), mois, by.x = "mois_no", by.y = "no"), provenance, by.x = "prov_no", by.y = "no")
demande2 = aggregate(ca ~ provenance, ca_all, sum)
print(demande2)
demande3 = aggregate(ca ~ departement + groupe, ca_all, sum)
print(demande3)
demande4 = aggregate(ca ~ provenance, subset(ca_all, year == 2004), sum)
print(demande4)
demande4 = aggregate(ca ~ provenance, subset(ca_all, annee == 2004), sum)
print(demande4)
aggregate(ca ~ departement, subset(ca_all, annee == 2004), sum)
setNames(aggregate(ca ~ departement, subset(ca_all, annee == 2003), sum), c("departement", "ca2003"))
setNames(aggregate(ca ~ departement, subset(ca_all, annee == 2004), sum), c("departement", "ca2004"))
demande5 = merge(
setNames(aggregate(ca ~ departement, subset(ca_all, annee == 2003), sum), c("departement", "ca2003")),
setNames(aggregate(ca ~ departement, subset(ca_all, annee == 2004), sum), c("departement", "ca2004"))
)
print(demande5)
demande6 = merge(
setNames(aggregate(ca ~ provenance + mois, subset(ca_all, annee == 2003), sum), c("provenance", "mois", "ca2003")),
setNames(aggregate(ca ~ provenance + mois, subset(ca_all, annee == 2004), sum), c("provenance", "mois", "ca2004"))
)
print(demande6)
demande6 = merge(
setNames(aggregate(ca ~ provenance + mois_numero, subset(ca_all, annee == 2003), sum), c("provenance", "mois", "ca2003")),
setNames(aggregate(ca ~ provenance + mois_numero, subset(ca_all, annee == 2004), sum), c("provenance", "mois", "ca2004"))
)
print(demande6)
demande6a = transform(
merge(
setNames(aggregate(ca ~ provenance + mois_numero, subset(ca_all, annee == 2003), sum), c("provenance", "mois", "ca2003")),
setNames(aggregate(ca ~ provenance + mois_numero, subset(ca_all, annee == 2004), sum), c("provenance", "mois", "ca2004"))
),
evol = ca2004 - ca2003
)
print(demande6a)
??transpose
??reaarrange
??arrange
?melt
??melt
library(reshape2)
demande6a
demande6a = transform(
merge(
setNames(aggregate(ca ~ provenance + mois_numero, subset(ca_all, annee == 2003), sum), c("provenance", "mois", "ca2003")),
setNames(aggregate(ca ~ provenance + mois_numero, subset(ca_all, annee == 2004), sum), c("provenance", "mois", "ca2004"))
),
evol = ca2004 - ca2003,
ca2003 = NULL,
ca2004 = NULL
)
print(demande6a)
library(reshape2)
??reshape
melt(demande6a)
melt(demande6a, id = "mois")
?melt
airquality
names(airquality) <- tolower(names(airquality))
aqm <- melt(airquality, id=c("month", "day"), na.rm=TRUE)
aqm
acast(aqm, day ~ month ~ variable)
acast(demande6a, provenance ~ mois)
acast(demande6a, provenance ~ mois, value.var = "evol")
demande6a = transform(
merge(
setNames(aggregate(ca ~ provenance + mois_numero, subset(ca_all, annee == 2003), sum), c("provenance", "mois", "ca2003")),
setNames(aggregate(ca ~ provenance + mois_numero, subset(ca_all, annee == 2004), sum), c("provenance", "mois", "ca2004"))
),
evol = ca2004 - ca2003,
ca2003 = NULL,
ca2004 = NULL
)
demande6 = acast(demande6a, provenance ~ mois, value.var = "evol")
print(demande6)
library(ggplot2)
ggplot(ca_all, aes(mois, ca, color = annee)) + geom_line()
graphique1 = aggregate(ca ~ mois_numero + annee, ca_all, sum)
ggplot(graphique1, aes(mois_numero, ca, color = annee)) + geom_line()
graphique1 = aggregate(ca ~ mois_numero + annee, ca_all, sum)
ggplot(graphique1, aes(mois_numero, ca, color = factor(annee)) + geom_line()
)
ggplot(graphique1, aes(mois_numero, ca, color = factor(annee))) + geom_line()
View(graphique1)
graphique1 = aggregate(ca ~ mois_numero + annee + departement, ca_all, sum)
ggplot(graphique1, aes(mois_numero, ca, color = factor(annee))) + geom_line() +
facet_wrap(departement)
graphique1 = aggregate(ca ~ mois_numero + annee, ca_all, sum)
graphique2 = aggregate(ca ~ mois_numero + annee + departement, ca_all, sum)
ggplot(graphique2, aes(mois_numero, ca, color = factor(annee))) + geom_line() +
facet_wrap(departement)
graphique2 = aggregate(ca ~ mois_numero + annee + departement, ca_all, sum)
ggplot(graphique2, aes(mois_numero, ca, color = factor(annee))) + geom_line() +
facet_wrap("departement")
graphique2 = aggregate(ca ~ mois_numero + annee + departement, ca_all, sum)
ggplot(graphique2, aes(mois_numero, ca, color = factor(annee))) + geom_line() +
facet_wrap(~ departement)
graphique3 = aggregate(ca ~ mois_numero + provenance, ca_all, sum)
ggplot(graphique3, aes(mois_numero, provenance, fill = ca)) + geom_bin2d()
graphique3 = aggregate(ca ~ mois_numero + provenance, ca_all, sum)
ggplot(graphique3, aes(factor(mois_numero), provenance, fill = ca)) + geom_bin2d()
library(FactoMineR)
acp = PCA(demande6, graph = T)
CA(demande6)
?CA
afca = transform(
merge(
setNames(aggregate(ca ~ provenance + mois_numero, subset(ca_all, annee == 2003), sum), c("provenance", "mois", "ca2003")),
setNames(aggregate(ca ~ provenance + mois_numero, subset(ca_all, annee == 2004), sum), c("provenance", "mois", "ca2004"))
),
evol = (ca2004 - ca2003) / ca2004,
ca2003 = NULL,
ca2004 = NULL
)
afc = acast(afca, provenance ~ mois, value.var = "evol")
CA(afc)
View(afca)
afca = transform(
merge(
setNames(aggregate(ca ~ provenance + mois_numero, subset(ca_all, annee == 2003), sum), c("provenance", "mois", "ca2003")),
setNames(aggregate(ca ~ provenance + mois_numero, subset(ca_all, annee == 2004), sum), c("provenance", "mois", "ca2004"))
),
evol = (100 * ca2004) / ca2003,
ca2003 = NULL,
ca2004 = NULL
)
afc = acast(afca, provenance ~ mois, value.var = "evol")
CA(afc)
View(afc)
cah = hclust(dist(demande6), "ward.D2")
par(mar = c(0, 0, 2, 0) + .1)
plot(cah, main = "", axes = FALSE)
abline(h = mean(cah$height[50:51]), lty = 2, col = "gray50")
abline(h = mean(cah$height[48:49]), lty = 2, col = "gray50")
ggplot(graphique1, aes(factor(mois_numero), ca, color = factor(annee))) + geom_line()
ggplot(graphique1, aes(mois_numero, ca, color = factor(annee))) + geom_line()
ggplot(graphique1, aes(mois_numero, ca, color = factor(annee))) + geom_line() +
scale_x_discrete()
ggplot(graphique2, aes(factor(mois_numero), ca, color = factor(annee))) +
geom_line() + scale_x_discrete() +
facet_wrap(~ departement)
ggplot(graphique2, aes(mois_numero, ca, color = factor(annee))) +
geom_line() + scale_x_discrete() +
facet_wrap(~ departement)
