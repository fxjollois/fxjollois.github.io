quit()
quit()
print("test")
R.version
.libPaths()
setwd("~/Documents/fxjollois.github.io/complements-r-recap")
sci = read.table("scimagojr-1996-2014.csv", header = T, sep = ";", quote = NULL, dec = ",")
View(sci)
shiny::runApp()
runApp()
?validStatuses
runApp()
df = aggregate(Documents ~ Country, sci, sum)
df.ordre = df[order(df$Documents, decreasing = T),]
View(df.ordre)
runApp()
runApp()
runApp()
input = list(base100.choix = c("France", "United States", "United Kingdom"))
df = subset(sci,
subset = Country %in% input$base100.choix,
select = c(Country, Year, Documents))
df
df.large = dcast(df, Country ~ Year)
df.large
df.base100 = t(apply(df.large, 1, function(v) return(v / v[1] * 100)))
df.base100 = t(apply(df.large[,-1], 1, function(v) return(v / v[1] * 100)))
df.base100$Country = df.large$Country
df.base100 = t(apply(df.large[,-1], 1, function(v) return(v / v[1] * 100)))
df.base100
df.base100 = data.frame(t(apply(df.large[,-1], 1, function(v) return(v / v[1] * 100))))
df.base100
df.base100 = t(apply(df.large[,-1], 1, function(v) return(v / v[1] * 100)))
rownames(df.base100) = c("A", "B", "C")
df.base100
df.base100.melt = melt(df.base100)
df.base100.melt
df.base100 = t(apply(df.large[,-1], 1, function(v) return(v / v[1] * 100)))
rownames(df.base100) = df.large$Country
df.base100.melt = melt(df.base100)
ggplot(df.base100.melt, aes(variable, value, color = Country)) +
geom_line(lwd = 1.5) +
theme_minimal() +
xlab("Années") + ylab("Evolution en base 100")
df.base100.melt
ggplot(df.base100.melt, aes(Var2, value, color = Var1)) +
geom_line(lwd = 1.5) +
theme_minimal() +
xlab("Années") + ylab("Evolution en base 100")
runApp()
aggDocuments = aggregate(Documents ~ Country, sci, sum)
aggCitations = aggregate(Citaions ~  Country, sci, sum)
aggRank = aggregate(Rank ~  Country, sci, median)
aggCitations = aggregate(Citations ~  Country, sci, sum)
aggRank = aggregate(Rank ~  Country, sci, median)
aggHindex = aggregate(H.index ~ Country, sci, mean)
agg = merge(merge(merge(aggDocuments, aggCitations), aggRank), aggHindex)
ggplot(agg, aes(Documents, Citations, color = Rank, size = H.index)) +
geom_point()
ggplot(agg, aes(Documents, Citations, color = Rank, size = H.index)) +
geom_point() +
scale_x_log10() +
scale_y_log10() +
scale_color_gradient2(low = "darkgreen", high = "darkred", mid = "gray50") +
theme_minimal()
ggplot(agg, aes(Documents, Citations, color = Rank, size = H.index, label = Country)) +
geom_point() +
geom_text() +
scale_x_log10() +
scale_y_log10() +
scale_color_gradient2(low = "darkgreen", high = "darkred", mid = "gray50") +
theme_minimal()
ggplot(agg, aes(Documents, Citations, color = Rank, size = H.index, label = Country)) +
geom_point() +
geom_text(size = 3, color = "black") +
scale_x_log10() +
scale_y_log10() +
scale_color_gradient2(low = "darkgreen", high = "darkred", mid = "gray50") +
theme_minimal()
ggplot(agg, aes(Documents, Citations, color = Rank, size = H.index, label = Country)) +
geom_point() +
geom_text(size = 3, color = "black", check_overlap = T) +
scale_x_log10() +
scale_y_log10() +
scale_color_gradient2(low = "darkgreen", high = "darkred", mid = "gray50") +
theme_minimal()
ggplot(agg, aes(Documents, Citations, color = Rank, size = H.index, label = Country)) +
geom_point() +
geom_text(size = 3, color = "black", check_overlap = T) +
scale_x_log10() +
scale_y_log10() +
scale_color_gradient2(low = "darkgreen", high = "darkred", mid = "gray50", midpoint = 100) +
theme_minimal()
ggplot(agg, aes(Documents, Citations, color = Rank, size = H.index, label = Country)) +
geom_point() +
geom_text(size = 3, color = "black", check_overlap = T) +
scale_x_log10() +
scale_y_log10() +
scale_color_gradient2(low = "green", high = "darkred", mid = "gray50", midpoint = 100) +
theme_minimal()
ggplot(agg, aes(Documents, Citations, color = Rank, size = H.index, label = Country)) +
geom_point() +
geom_text(size = 3, color = "black", check_overlap = T) +
scale_x_log10() +
scale_y_log10() +
scale_color_gradient2(low = "green", high = "red", mid = "gray50", midpoint = 100) +
theme_minimal()
ggplot(agg, aes(Documents, Citations, color = Rank, size = H.index, label = Country)) +
geom_point() +
geom_text(size = 3, color = "black", check_overlap = T) +
scale_x_log10() +
scale_y_log10() +
scale_color_gradient2(low = "green3", high = "red", mid = "gray50", midpoint = 100) +
theme_minimal()
ggplot(agg, aes(Documents, Citations, color = Rank, size = H.index, label = Country)) +
geom_point() +
geom_text(size = 3, color = "black", check_overlap = T) +
scale_x_log10() +
scale_y_log10() +
scale_color_gradient2(low = "green2", high = "red", mid = "gray50", midpoint = 100) +
theme_minimal()
ggplot(agg, aes(Documents, Citations, color = Rank, size = H.index, label = Country)) +
geom_point() +
geom_text(size = 3, color = "black", check_overlap = T) +
scale_x_log10() +
scale_y_log10() +
scale_color_gradient2(low = "green1", high = "red", mid = "gray50", midpoint = 100) +
theme_minimal()
ggplot(agg, aes(Documents, Citations, color = Rank, size = H.index, label = Country)) +
geom_point() +
geom_text(size = 3, color = "black", check_overlap = T) +
scale_x_log10() +
scale_y_log10() +
scale_color_gradient2(low = "green", high = "red", mid = "gray50", midpoint = 100) +
theme_minimal()
ggplot(agg, aes(Documents, Citations, color = Rank, size = H.index, label = Country)) +
geom_point() +
geom_text(size = 3, color = "black", check_overlap = T) +
scale_x_log10() +
scale_y_log10() +
scale_color_gradient2(low = "green", high = "red", mid = "gray70", midpoint = 100) +
theme_minimal()
runApp()
runApp()
